<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6180002: Last Updated: Thu Jun 13 10:49:07 2024
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[18]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[18]">ADC_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[37]">CAN_EWMC_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[36]">CAN_RX1_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[3f]">CAU_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[39]">CMP0_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[3a]">CMP1_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[2b]">DAC_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[38]">DMAMUX_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[11]">DMA_Channel0_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[12]">DMA_Channel1_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[13]">DMA_Channel2_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[14]">DMA_Channel3_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[15]">DMA_Channel4_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[16]">DMA_Channel5_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[17]">DMA_Channel6_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[c]">EXTI0_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[34]">EXTI10_15_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[d]">EXTI1_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[e]">EXTI2_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[f]">EXTI3_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[10]">EXTI4_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[30]">EXTI5_9_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[a]">FMC_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from gd32l23x_it.o(.text.HardFault_Handler) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[26]">I2C0_ER_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[25]">I2C0_EV_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[3b]">I2C0_WKUP_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[28]">I2C1_ER_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[27]">I2C1_EV_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[43]">I2C1_WKUP_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[2d]">I2C2_ER_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[2c]">I2C2_EV_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[3c]">I2C2_WKUP_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[45]">LPTIMER0_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[47]">LPTIMER1_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[3e]">LPUART0_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[44]">LPUART0_WKUP_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[48]">LPUART1_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[46]">LPUART1_WKUP_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[7]">LVD_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from gd32l23x_it.o(.text.NMI_Handler) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from gd32l23x_it.o(.text.PendSV_Handler) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[b]">RCU_CTC_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[2e]">RTC_Alarm_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[9]">RTC_WKUP_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[41]">SLCD_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[29]">SPI0_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[2a]">SPI1_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from gd32l23x_it.o(.text.SVC_Handler) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from gd32l23x_it.o(.text.SysTick_Handler) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[4a]">SystemInit</a> from system_gd32l23x.o(.text.SystemInit) referenced from startup_gd32l235xx.o(.text)
 <LI><a href="#[8]">TAMPER_STAMP_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[32]">TIMER0_Channel_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[31]">TIMER0_TRG_CMT_UP_BRK_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[1e]">TIMER11_IRQHandler</a> from usebasetimer.o(.text.TIMER11_IRQHandler) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[33]">TIMER14_IRQHandler</a> from usebasetimer.o(.text.TIMER14_IRQHandler) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[1b]">TIMER1_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[1c]">TIMER2_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[35]">TIMER40_IRQHandler</a> from usebasetimer.o(.text.TIMER40_IRQHandler) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[1f]">TIMER5_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[20]">TIMER6_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[1d]">TIMER8_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[40]">TRNG_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[23]">UART3_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[24]">UART4_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[21]">USART0_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[3d]">USART0_WKUP_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[22]">USART1_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[42]">USART1_WKUP_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[19]">USBD_HP_CAN_TX_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[1a]">USBD_LP_CAN_RX0_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[2f]">USBD_WKUP_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[6]">WWDGT_IRQHandler</a> from startup_gd32l235xx.o(.text) referenced from startup_gd32l235xx.o(RESET)
 <LI><a href="#[4b]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32l235xx.o(.text)
 <LI><a href="#[4c]">fputc</a> from main.o(.text.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[49]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(.text)
</UL>
<P><STRONG><a name="[4d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[65]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>CAN_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>CAN_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>CAU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>CMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMAMUX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXTI10_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>EXTI5_9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>I2C0_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>I2C1_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>I2C2_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>LPTIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>LPTIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>LPUART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>LPUART0_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>LPUART1_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>RCU_CTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SLCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIMER0_TRG_CMT_UP_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIMER5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIMER6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIMER8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TRNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>USART0_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>USART1_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>USBD_HP_CAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>USBD_LP_CAN_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USBD_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32l235xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, siabs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CTRL_Show_temp_humi
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CTRL_Show_half
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[52]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[d5]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, fmul.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, fdiv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_led_status
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, dmul.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_led_status
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[d2]"></a>__aeabi_fcmple</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
</UL>

<P><STRONG><a name="[d4]"></a>__aeabi_fcmpge</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpge.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
</UL>

<P><STRONG><a name="[d3]"></a>__aeabi_fcmpgt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpgt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
</UL>

<P><STRONG><a name="[bf]"></a>__aeabi_fcmpeq</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpeq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_led_status
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_led_status
</UL>

<P><STRONG><a name="[d6]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
</UL>

<P><STRONG><a name="[c0]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_led_status
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, d2f.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_led_status
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[51]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[50]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[59]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, depilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[58]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, depilogue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[63]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[64]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[ee]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[4e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[f1]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, uidiv_div0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[66]"></a>ConfigTimerTask</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, usebasetimer.o(.text.ConfigTimerTask))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_disable
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_task_exe
</UL>

<P><STRONG><a name="[b4]"></a>GetTimeTaskParams</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, usebasetimer.o(.text.GetTimeTaskParams))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_task_exe
</UL>

<P><STRONG><a name="[d1]"></a>Get_led_run_mode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, i2c_led.o(.text.Get_led_run_mode))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32l23x_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>I2C_CTRL_Show_temp_humi</STRONG> (Thumb, 728 bytes, Stack size 0 bytes, i2c_led.o(.text.I2C_CTRL_Show_temp_humi))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showNumber
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_negative
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_data_prepare_number
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPwmupdate
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CTRL_Show_half
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abs
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_i2c_show_humi_task
</UL>

<P><STRONG><a name="[71]"></a>IIC2_All_Init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, i2c_led.o(.text.IIC2_All_Init))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_config
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_config
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>IS31FL3236_Init</STRONG> (Thumb, 302 bytes, Stack size 0 bytes, i2c_led.o(.text.IS31FL3236_Init))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_led_status
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRunMode
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31_WriteOneByte_timeout
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_led_level
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>IS31_WriteOneByte_timeout</STRONG> (Thumb, 754 bytes, Stack size 0 bytes, i2c_led.o(.text.IS31_WriteOneByte_timeout))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_clear
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transfer_byte_number_config
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_transmit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop_on_bus
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start_on_bus
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_addressing
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31FL3236_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_data_prepare_number
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPwmupdate
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPwm
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRunMode
</UL>

<P><STRONG><a name="[82]"></a>Init_SHT4X</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, sht4x_example_usage.o(.text.Init_SHT4X))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT4x_init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sht4x_status
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32l23x_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32l23x_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>SHT4x_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sht4x_example_usage.o(.text.SHT4x_init))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_probe
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SHT4X
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32l23x_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32l23x_it.o(.text.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>SystemInit</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, system_gd32l23x.o(.text.SystemInit))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(.text)
</UL>
<P><STRONG><a name="[1e]"></a>TIMER11_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, usebasetimer.o(.text.TIMER11_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIMER14_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usebasetimer.o(.text.TIMER14_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIMER40_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usebasetimer.o(.text.TIMER40_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32l235xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>com_usart_init</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, main.o(.text.com_usart_init))
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_config
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_stop_bit_set
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_word_length_set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>delay_1ms</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, systick.o(.text.delay_1ms))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_sleep_usec
</UL>

<P><STRONG><a name="[88]"></a>delay_decrement</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, systick.o(.text.delay_decrement))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[4c]"></a>fputc</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(.text.fputc))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[ad]"></a>fwdgt_config</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, gd32l23x_fwdgt.o(.text.fwdgt_config))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>fwdgt_counter_reload</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32l23x_fwdgt.o(.text.fwdgt_counter_reload))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[af]"></a>fwdgt_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32l23x_fwdgt.o(.text.fwdgt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ae]"></a>fwdgt_write_disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32l23x_fwdgt.o(.text.fwdgt_write_disable))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b2]"></a>fwdgt_write_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32l23x_fwdgt.o(.text.fwdgt_write_enable))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4]"></a>get_IS31FL_status</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, i2c_led.o(.text.get_IS31FL_status))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_i2c_show_humi_task
</UL>

<P><STRONG><a name="[ab]"></a>get_sht4x_status</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sht4x.o(.text.get_sht4x_status))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cycle
</UL>

<P><STRONG><a name="[90]"></a>gpio_af_set</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, gd32l23x_gpio.o(.text.gpio_af_set))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_usart_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[de]"></a>gpio_bit_reset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32l23x_gpio.o(.text.gpio_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_id
</UL>

<P><STRONG><a name="[d8]"></a>gpio_bit_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32l23x_gpio.o(.text.gpio_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_id
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
</UL>

<P><STRONG><a name="[73]"></a>gpio_config</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, i2c_led.o(.text.gpio_config))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC2_All_Init
</UL>

<P><STRONG><a name="[91]"></a>gpio_mode_set</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, gd32l23x_gpio.o(.text.gpio_mode_set))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_usart_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[92]"></a>gpio_output_options_set</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, gd32l23x_gpio.o(.text.gpio_output_options_set))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_usart_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[a0]"></a>i2c_address_config</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_address_config))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_config
</UL>

<P><STRONG><a name="[c5]"></a>i2c_automatic_end_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_automatic_end_enable))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_ReadByte_timeout
</UL>

<P><STRONG><a name="[74]"></a>i2c_config</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, i2c_led.o(.text.i2c_config))
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_i2c_clock_config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_enable
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_address_config
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_clock_config
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_timing_config
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC2_All_Init
</UL>

<P><STRONG><a name="[c6]"></a>i2c_data_receive</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_ReadByte_timeout
</UL>

<P><STRONG><a name="[7f]"></a>i2c_data_transmit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_WriteByte_timeout
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31_WriteOneByte_timeout
</UL>

<P><STRONG><a name="[a2]"></a>i2c_deinit</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_deinit))
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>i2c_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_enable))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_config
</UL>

<P><STRONG><a name="[81]"></a>i2c_flag_clear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_WriteByte_timeout
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_ReadByte_timeout
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31_WriteOneByte_timeout
</UL>

<P><STRONG><a name="[7b]"></a>i2c_flag_get</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_WriteByte_timeout
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_ReadByte_timeout
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31_WriteOneByte_timeout
</UL>

<P><STRONG><a name="[7e]"></a>i2c_master_addressing</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_master_addressing))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_WriteByte_timeout
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_ReadByte_timeout
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31_WriteOneByte_timeout
</UL>

<P><STRONG><a name="[9f]"></a>i2c_master_clock_config</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_master_clock_config))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_config
</UL>

<P><STRONG><a name="[c4]"></a>i2c_reload_disable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_reload_disable))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_ReadByte_timeout
</UL>

<P><STRONG><a name="[7c]"></a>i2c_start_on_bus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_start_on_bus))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_WriteByte_timeout
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_ReadByte_timeout
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31_WriteOneByte_timeout
</UL>

<P><STRONG><a name="[80]"></a>i2c_stop_on_bus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_stop_on_bus))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_WriteByte_timeout
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31_WriteOneByte_timeout
</UL>

<P><STRONG><a name="[9e]"></a>i2c_timing_config</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_timing_config))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_config
</UL>

<P><STRONG><a name="[7a]"></a>i2c_transfer_byte_number_config</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gd32l23x_i2c.o(.text.i2c_transfer_byte_number_config))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_WriteByte_timeout
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_ReadByte_timeout
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31_WriteOneByte_timeout
</UL>

<P><STRONG><a name="[78]"></a>init_led_status</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, i2c_led.o(.text.init_led_status))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31FL3236_Init
</UL>

<P><STRONG><a name="[a5]"></a>led_dispaly_state</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, i2c_led.o(.text.led_dispaly_state))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPwmupdate
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPwm
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_task_exe
</UL>

<P><STRONG><a name="[49]"></a>main</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwdgt_counter_reload
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwdgt_write_enable
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_task_exe
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_id
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwdgt_enable
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwdgt_write_disable
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwdgt_config
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31FL3236_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_deinit
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sht4x_status
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SHT4X
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;useGeneralTimerProcess
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC2_All_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_usart_init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_stab_wait
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_on
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[b1]"></a>measure_task_exe</STRONG> (Thumb, 538 bytes, Stack size 0 bytes, core_task.o(.text.measure_task_exe))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_dispaly_state
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigTimerTask
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetTimeTaskParams
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeTaskParams
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setShtParams
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_i2c_show_humi_task
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ba]"></a>nvic_irq_enable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gd32l23x_misc.o(.text.nvic_irq_enable))
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_config
</UL>

<P><STRONG><a name="[8a]"></a>nvic_vector_table_set</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gd32l23x_misc.o(.text.nvic_vector_table_set))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e8]"></a>rcu_clock_freq_get</STRONG> (Thumb, 2480 bytes, Stack size 0 bytes, gd32l23x_rcu.o(.text.rcu_clock_freq_get))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[72]"></a>rcu_config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, i2c_led.o(.text.rcu_config))
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC2_All_Init
</UL>

<P><STRONG><a name="[bd]"></a>rcu_flag_get</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gd32l23x_rcu.o(.text.rcu_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_stab_wait
</UL>

<P><STRONG><a name="[9d]"></a>rcu_i2c_clock_config</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, gd32l23x_rcu.o(.text.rcu_i2c_clock_config))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_config
</UL>

<P><STRONG><a name="[a7]"></a>rcu_osci_on</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gd32l23x_rcu.o(.text.rcu_osci_on))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8]"></a>rcu_osci_stab_wait</STRONG> (Thumb, 572 bytes, Stack size 0 bytes, gd32l23x_rcu.o(.text.rcu_osci_stab_wait))
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gd32l23x_rcu.o(.text.rcu_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_usart_init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_config
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[a4]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gd32l23x_rcu.o(.text.rcu_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_deinit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[a3]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gd32l23x_rcu.o(.text.rcu_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_deinit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[be]"></a>record_led_status</STRONG> (Thumb, 386 bytes, Stack size 0 bytes, usebasetimer.o(.text.record_led_status))
<BR><BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpeq
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
</UL>

<P><STRONG><a name="[b5]"></a>resetTimeTaskParams</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, usebasetimer.o(.text.resetTimeTaskParams))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_task_exe
</UL>

<P><STRONG><a name="[c1]"></a>sensirion_common_check_crc</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, sensirion_common.o(.text.sensirion_common_check_crc))
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_common_generate_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_read_words_as_bytes
</UL>

<P><STRONG><a name="[c2]"></a>sensirion_common_generate_crc</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, sensirion_common.o(.text.sensirion_common_generate_crc))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_common_check_crc
</UL>

<P><STRONG><a name="[c3]"></a>sensirion_i2c_ReadByte_timeout</STRONG> (Thumb, 624 bytes, Stack size 0 bytes, sensirion_hw_i2c_implementation.o(.text.sensirion_i2c_ReadByte_timeout))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_clear
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transfer_byte_number_config
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_reload_disable
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_receive
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start_on_bus
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_automatic_end_enable
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_addressing
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_read
</UL>

<P><STRONG><a name="[c7]"></a>sensirion_i2c_WriteByte_timeout</STRONG> (Thumb, 700 bytes, Stack size 0 bytes, sensirion_hw_i2c_implementation.o(.text.sensirion_i2c_WriteByte_timeout))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_clear
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transfer_byte_number_config
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_transmit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop_on_bus
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start_on_bus
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_addressing
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_write
</UL>

<P><STRONG><a name="[c8]"></a>sensirion_i2c_read</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, sensirion_hw_i2c_implementation.o(.text.sensirion_i2c_read))
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_ReadByte_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_read_words_as_bytes
</UL>

<P><STRONG><a name="[c9]"></a>sensirion_i2c_read_words</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, sensirion_common.o(.text.sensirion_i2c_read_words))
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_read_words_as_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_read_serial
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_read
</UL>

<P><STRONG><a name="[ca]"></a>sensirion_i2c_read_words_as_bytes</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, sensirion_common.o(.text.sensirion_i2c_read_words_as_bytes))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_read
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_common_check_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_read_words
</UL>

<P><STRONG><a name="[cb]"></a>sensirion_i2c_write</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, sensirion_hw_i2c_implementation.o(.text.sensirion_i2c_write))
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_WriteByte_timeout
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_read_serial
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure
</UL>

<P><STRONG><a name="[cc]"></a>sensirion_sleep_usec</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, sensirion_hw_i2c_implementation.o(.text.sensirion_sleep_usec))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_read_serial
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_blocking_read
</UL>

<P><STRONG><a name="[6c]"></a>setPwm</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, i2c_led.o(.text.setPwm))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31_WriteOneByte_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showNumber
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_negative
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_dispaly_state
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CTRL_Show_half
</UL>

<P><STRONG><a name="[6b]"></a>setPwmupdate</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, i2c_led.o(.text.setPwmupdate))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31_WriteOneByte_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CTRL_Show_temp_humi
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_negative
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_dispaly_state
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CTRL_Show_half
</UL>

<P><STRONG><a name="[76]"></a>setRunMode</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, i2c_led.o(.text.setRunMode))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31_WriteOneByte_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31FL3236_Init
</UL>

<P><STRONG><a name="[b8]"></a>setShtParams</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, core_task.o(.text.setShtParams))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_task_exe
</UL>

<P><STRONG><a name="[79]"></a>set_led_level</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, i2c_led.o(.text.set_led_level))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31FL3236_Init
</UL>

<P><STRONG><a name="[84]"></a>set_sht4x_status</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sht4x.o(.text.set_sht4x_status))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SHT4X
</UL>

<P><STRONG><a name="[70]"></a>showNumber</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, i2c_led.o(.text.showNumber))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPwm
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CTRL_Show_temp_humi
</UL>

<P><STRONG><a name="[6e]"></a>show_negative</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, i2c_led.o(.text.show_negative))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPwmupdate
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPwm
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CTRL_Show_temp_humi
</UL>

<P><STRONG><a name="[cd]"></a>sht4x_measure</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sht4x.o(.text.sht4x_measure))
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_write
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_blocking_read
</UL>

<P><STRONG><a name="[ce]"></a>sht4x_measure_blocking_read</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, sht4x.o(.text.sht4x_measure_blocking_read))
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_read
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_sleep_usec
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_detail
</UL>

<P><STRONG><a name="[d0]"></a>sht4x_measure_detail</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, sht4x_example_usage.o(.text.sht4x_measure_detail))
<BR><BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_blocking_read
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_task
</UL>

<P><STRONG><a name="[b6]"></a>sht4x_measure_task</STRONG> (Thumb, 776 bytes, Stack size 0 bytes, core_task.o(.text.sht4x_measure_task))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sht4x_status
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_led_status
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_detail
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_led_run_mode
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_task_exe
</UL>

<P><STRONG><a name="[85]"></a>sht4x_probe</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sht4x.o(.text.sht4x_probe))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_read_serial
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHT4x_init
</UL>

<P><STRONG><a name="[cf]"></a>sht4x_read</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, sht4x.o(.text.sht4x_read))
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_read_words
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_measure_blocking_read
</UL>

<P><STRONG><a name="[d7]"></a>sht4x_read_serial</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, sht4x.o(.text.sht4x_read_serial))
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_sleep_usec
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_read_words
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_write
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sht4x_probe
</UL>

<P><STRONG><a name="[db]"></a>spi_crc_polynomial_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32l23x_spi.o(.text.spi_crc_polynomial_set))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
</UL>

<P><STRONG><a name="[dd]"></a>spi_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32l23x_spi.o(.text.spi_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
</UL>

<P><STRONG><a name="[da]"></a>spi_fifo_access_size_config</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gd32l23x_spi.o(.text.spi_fifo_access_size_config))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
</UL>

<P><STRONG><a name="[ac]"></a>spi_flash_init</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, gd25qxx.o(.text.spi_flash_init))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_quad_io23_output_enable
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_crc_polynomial_set
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_fifo_access_size_config
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b0]"></a>spi_flash_read_id</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, gd25qxx.o(.text.spi_flash_read_id))
<BR><BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[df]"></a>spi_flash_send_byte</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, gd25qxx.o(.text.spi_flash_send_byte))
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_flag_get
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_receive
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_id
</UL>

<P><STRONG><a name="[e2]"></a>spi_i2s_data_receive</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, gd32l23x_spi.o(.text.spi_i2s_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_send_byte
</UL>

<P><STRONG><a name="[e1]"></a>spi_i2s_data_transmit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, gd32l23x_spi.o(.text.spi_i2s_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_send_byte
</UL>

<P><STRONG><a name="[e0]"></a>spi_i2s_flag_get</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, gd32l23x_spi.o(.text.spi_i2s_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_send_byte
</UL>

<P><STRONG><a name="[d9]"></a>spi_init</STRONG> (Thumb, 312 bytes, Stack size 0 bytes, gd32l23x_spi.o(.text.spi_init))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
</UL>

<P><STRONG><a name="[dc]"></a>spi_quad_io23_output_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32l23x_spi.o(.text.spi_quad_io23_output_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
</UL>

<P><STRONG><a name="[a6]"></a>systick_config</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, systick.o(.text.systick_config))
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e6]"></a>timer_deinit</STRONG> (Thumb, 316 bytes, Stack size 0 bytes, gd32l23x_timer.o(.text.timer_deinit))
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[68]"></a>timer_disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32l23x_timer.o(.text.timer_disable))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigTimerTask
</UL>

<P><STRONG><a name="[67]"></a>timer_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32l23x_timer.o(.text.timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigTimerTask
</UL>

<P><STRONG><a name="[e9]"></a>timer_init</STRONG> (Thumb, 272 bytes, Stack size 0 bytes, gd32l23x_timer.o(.text.timer_init))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[ea]"></a>timer_interrupt_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32l23x_timer.o(.text.timer_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[8c]"></a>timer_interrupt_flag_clear</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32l23x_timer.o(.text.timer_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER40_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER11_IRQHandler
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[8b]"></a>timer_interrupt_flag_get</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gd32l23x_timer.o(.text.timer_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER40_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER11_IRQHandler
</UL>

<P><STRONG><a name="[e7]"></a>timer_struct_para_init</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gd32l23x_timer.o(.text.timer_struct_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[6f]"></a>update_data_prepare_number</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, i2c_led.o(.text.update_data_prepare_number))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31_WriteOneByte_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CTRL_Show_temp_humi
</UL>

<P><STRONG><a name="[b7]"></a>update_i2c_show_humi_task</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, core_task.o(.text.update_i2c_show_humi_task))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CTRL_Show_temp_humi
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_IS31FL_status
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_task_exe
</UL>

<P><STRONG><a name="[97]"></a>usart_baudrate_set</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, gd32l23x_usart.o(.text.usart_baudrate_set))
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_usart_init
</UL>

<P><STRONG><a name="[9b]"></a>usart_data_transmit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32l23x_usart.o(.text.usart_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[93]"></a>usart_deinit</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, gd32l23x_usart.o(.text.usart_deinit))
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_usart_init
</UL>

<P><STRONG><a name="[9a]"></a>usart_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32l23x_usart.o(.text.usart_enable))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_usart_init
</UL>

<P><STRONG><a name="[9c]"></a>usart_flag_get</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gd32l23x_usart.o(.text.usart_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[96]"></a>usart_parity_config</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, gd32l23x_usart.o(.text.usart_parity_config))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_usart_init
</UL>

<P><STRONG><a name="[98]"></a>usart_receive_config</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32l23x_usart.o(.text.usart_receive_config))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_usart_init
</UL>

<P><STRONG><a name="[95]"></a>usart_stop_bit_set</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, gd32l23x_usart.o(.text.usart_stop_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_usart_init
</UL>

<P><STRONG><a name="[99]"></a>usart_transmit_config</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32l23x_usart.o(.text.usart_transmit_config))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_usart_init
</UL>

<P><STRONG><a name="[94]"></a>usart_word_length_set</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, gd32l23x_usart.o(.text.usart_word_length_set))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_usart_init
</UL>

<P><STRONG><a name="[aa]"></a>useGeneralTimerProcess</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, usebasetimer.o(.text.useGeneralTimerProcess))
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_config
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eb]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7d]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0printf))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SHT4X
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_WriteByte_timeout
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_ReadByte_timeout
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensirion_i2c_write
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS31_WriteOneByte_timeout
</UL>

<P><STRONG><a name="[62]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[86]"></a>SysTick_Config</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, systick.o(.text.SysTick_Config))
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
</UL>

<P><STRONG><a name="[87]"></a>__NVIC_SetPriority</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, systick.o(.text.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
</UL>

<P><STRONG><a name="[89]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_gd32l23x.o(.text.system_clock_config))
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_64m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[e3]"></a>system_clock_64m_hxtal</STRONG> (Thumb, 314 bytes, Stack size 0 bytes, system_gd32l23x.o(.text.system_clock_64m_hxtal))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[bb]"></a>__NVIC_SetPriority</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, gd32l23x_misc.o(.text.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[bc]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, gd32l23x_misc.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[69]"></a>I2C_CTRL_Show_half</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, i2c_led.o(.text.I2C_CTRL_Show_half))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPwmupdate
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPwm
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abs
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CTRL_Show_temp_humi
</UL>

<P><STRONG><a name="[e5]"></a>timer_config</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, usebasetimer.o(.text.timer_config))
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_struct_para_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;useGeneralTimerProcess
</UL>

<P><STRONG><a name="[b9]"></a>nvic_config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usebasetimer.o(.text.nvic_config))
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;useGeneralTimerProcess
</UL>

<P><STRONG><a name="[8d]"></a>time_cycle</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, usebasetimer.o(.text.time_cycle))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sht4x_status
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_IS31FL_status
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER11_IRQHandler
</UL>

<P><STRONG><a name="[ed]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 0 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ec]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 0 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[f0]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ef]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
